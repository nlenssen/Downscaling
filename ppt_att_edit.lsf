#!/bin/csh
#
# $Id: ppt_att_edit.lsf,v 1.1 2007/09/03 20:56:51 thoar Exp $
#----------------------------------------------------------------------
# LSF options for BSUB
#
### -J      job name 
### -o      output listing filename 
### -q      queue
### -N -u   mail this user when job finishes
### -n      number of processors  (really)
### -W      wall-clock hours:minutes required
#
#----------------------------------------------------------------------
#
#BSUB -J attedit[1-12]
#BSUB -o attedit.%J.%I.log
#BSUB -q standby
#BSUB -N -u ${USER}@ucar.edu
#BSUB -n 1
#BSUB -R "span[ptile=1]"
#BSUB -W 6:00
#BXXX -m  "cr0128en cr0129en cr0130en cr0131en cr0132en cr0133en cr0134en cr0135en cr0136en cr0137en cr0138en cr0139en cr0140en cr0141en cr0202en cr0201en"
#
#----------------------------------------------------------------------

#----------------------------------------------------------------------
# Turns out the scripts are a lot more flexible if you don't rely on 
# the queuing-system-specific variables -- so I am converting them to
# 'generic' names and using the generics throughout the remainder.
#----------------------------------------------------------------------

if ($?LSB_HOSTS) then

   setenv ORIGINALDIR $LS_SUBCWD
   setenv JOBNAME     $LSB_OUTPUTFILE:ar
   setenv JOBID       $LSB_JOBID
   setenv MYQUEUE     $LSB_QUEUE
   setenv MYHOST      $LSB_SUB_HOST
   setenv TASKID      $LSB_JOBINDEX
   setenv NTASKS      $LSB_JOBINDEX_END
   setenv TEMPDIR     /ptmp/thoar

else

   #-------------------------------------------------------------------
   # You can debug the script by running this interactively.
   # All the environment variables normally specified by the queueing 
   # system must be manually set ... here.
   # PLEASE only run VERY SHORT jobs this way.
   #-------------------------------------------------------------------

   setenv ORIGINALDIR `pwd`
   setenv JOBNAME     attedit
   setenv JOBID       $$
   setenv MYQUEUE     Interactive
   setenv MYHOST      $host
   setenv TASKID      2
   setenv NTASKS      3
   setenv TEMPDIR     /project/gsp/thoar
   setenv TEMPDIR     /ptmp/thoar

endif

set ddir = /ptmp/thoar/downscaling/prism100

#----------------------------------------------------------------------
# Set up the arrays that will be exploited by the Job Array ID 
#----------------------------------------------------------------------
   
set  startyears = ( 1895 1900 1910 1920 1930 1940 1950 1960 1970 1980 1990 2000 )
set  endyears   = ( 1899 1909 1919 1929 1939 1949 1959 1969 1979 1989 1999 2005 )
set year1 = $startyears[$TASKID]
set yearN = $endyears[$TASKID]
   
cd ${ddir}

setenv FILE ppt_${year1}_${yearN}.nc

ncatted -a units,ppt,o,c,"mm*100" ${FILE}
ncatted -a standard_name,ppt,o,c,"precipitation" ${FILE}
ncatted -a long_name,ppt,o,c,"monthly total precipitation" ${FILE}
ncatted -a cell_methods,ppt,o,c,"time: total (interval: 1 month)" ${FILE}
ncatted -a cell_method,ppt,o,c,"time: total" ${FILE}
#ncatted -O -h -a history,global,o,c," " ${FILE}
